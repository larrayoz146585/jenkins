pipeline {
    agent any
    stages {
        stage('Preparar directorios') {
            steps {
                script {
                    sh """
                        mkdir -p resultados/versiones
                        mkdir -p resultados/puertos
                        mkdir -p resultados/hashes
                    """
                }
            }
        }
        stage('Obtener versiones y volcarlas en un fichero') {
            steps {
                script {
                    def timestamp = new Date().format("yyyyMMdd_HHmmss")
                    def fileName = "resultados/versiones/versiones_${timestamp}.txt"
                    sh """
                        echo "Java Version:" > ${fileName}
                        java -version 2>> ${fileName}
                        echo "Jenkins Version:" >> ${fileName}
                        curl -sI http://localhost:8080 | grep 'X-Jenkins:' | awk '{print \$2}' >> ${fileName}
                    """
                }
            }
        }
        stage('Escanear IP local y guardar puertos abiertos') {
            steps {
                script {
                    def timestamp = new Date().format("yyyyMMdd_HHmmss")
                    def fileName = "resultados/puertos/puertos_abiertos_${timestamp}.txt"
                    sh """
                        ip=\$(hostname -I | awk '{print \$1}')
                        echo "Escaneando IP: \$ip" > ${fileName}
                        nmap -p- \$ip >> ${fileName}
                    """
                }
            }
        }
        stage('Calcular SHA-256 de los ficheros en una ruta') {
            steps {
                script {
                    def timestamp = new Date().format("yyyyMMdd_HHmmss")
                    def fileName = "resultados/hashes/hashes_${timestamp}.txt"
                    def targetPath = "${env.WORKSPACE}/pipeline-seguridad" // Ajusta la ruta aquÃ­
                    sh """
                        echo "Calculando SHA-256 de los ficheros en ${targetPath}" > ${fileName}
                        if [ -d "${targetPath}" ]; then
                            find ${targetPath} -type f -exec sha256sum {} \\; >> ${fileName}
                        else
                            echo "Ruta no encontrada: ${targetPath}" >> ${fileName}
                        fi
                    """
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline completado.'
        }
    }
}