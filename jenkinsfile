pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/larrayoz146585/jenkins.git'
            }
        }

        stage('Velocity KPI') {
            steps {
                script {
                    def since = new Date() - 14 // últimos 14 días
                    def sinceFormatted = since.format("yyyy-MM-dd'T'HH:mm:ss", TimeZone.getTimeZone('UTC'))

                    def commits = sh(
                        script: """git log --since='${sinceFormatted}' --pretty=oneline | wc -l""",
                        returnStdout: true
                    ).trim()

                    echo "Commits en los últimos 14 días (Velocity): ${commits}"
                }
            }
        }

        stage('Fix Permissions') {
            steps {
                sh 'chmod +x ./build.sh'
                sh 'chmod +x ./test.sh'
                sh 'chmod +x ./deploy.sh'
            }
        }

        stage('Build') {
            steps {
                sh './build.sh'
            }
        }

        stage('Test') {
            steps {
                sh './test.sh'
            }
        }

        stage('Deploy (host)') {
            steps {
                sh './deploy.sh'
            }
        }

        stage('Deploy (docker)') {
            steps {
                script {
                    sh 'docker rm -f flask-app || true'
                    sh 'docker build -t flask-app .'
                    sh 'docker run -d --rm -p 8000:5000 --name flask-app flask-app'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finalizado'
            sh 'docker rm -f flask-app || true'
        }
    }
}
